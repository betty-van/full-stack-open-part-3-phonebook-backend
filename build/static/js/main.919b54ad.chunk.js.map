{"version":3,"sources":["services/persons.js","components/Button.js","components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/Success.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","nameObject","put","Button","person","setPersons","persons","setErrorMessage","setSuccessMessage","onClick","result","window","confirm","name","console","log","personsService","filter","p","setTimeout","catch","error","Person","newFilter","toLowerCase","indexOf","map","key","number","PersonForm","newName","newNumber","setNewName","setNewNumber","onSubmit","event","preventDefault","names","thisPerson","find","changedPerson","concat","value","onChange","target","type","Filter","setNewFilter","Notification","message","className","Success","App","useState","errorMessage","successMessage","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.919b54ad.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,  newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(() => `${id} was removed from the server`)\r\n}\r\n\r\nconst update = (id, nameObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, nameObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { \r\n    getAll: getAll,\r\n    create: create,\r\n    remove: remove,\r\n    update: update\r\n}","import React from 'react'\r\nimport personsService from '../services/persons'\r\n\r\nconst Button = ({person, setPersons, persons, setErrorMessage, setSuccessMessage}) => {\r\n    const handleClick = () => {\r\n        const result = window.confirm(`Are you sure you want to delete ${person.name}?`)\r\n        console.log(result)\r\n\r\n        if (result === true) {\r\n            personsService\r\n                .remove(person.id)\r\n                .then(response => {\r\n                    console.log(`${person.name}`, response)\r\n                })\r\n                .then(() => {\r\n                    const result = persons.filter(p => p.name !== person.name)\r\n                    setPersons(result)\r\n\r\n                    setSuccessMessage(\r\n                        `Deleted '${person.name}' `\r\n                    )\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    }, 5000)\r\n                })  \r\n                .catch(error => {\r\n                    setErrorMessage(\r\n                        `Unable to delete '${person.name}'`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <button onClick={handleClick}>\r\n           delete\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\n// Display the name of each person on render\r\nconst Person = ({persons, setPersons, newFilter, setErrorMessage, setSuccessMessage}) => {\r\n\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)\r\n    const rows = () => personsToShow.map(person => \r\n        <p key={person.id}> {person.name} {person.number} <Button person={person} persons={persons} setPersons={setPersons} setErrorMessage={setErrorMessage} setSuccessMessage={setSuccessMessage} /></p>\r\n    )\r\n    \r\n    return (rows())\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport personsService from '../services/persons'\r\n\r\nconst PersonForm = ({persons, newName, newNumber, setNewName, setNewNumber, setPersons, setErrorMessage, setSuccessMessage }) => {\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(newName) !== -1) {\r\n            const result = window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`)\r\n            const thisPerson = persons.find(p => p.name === newName)\r\n            const changedPerson = {...thisPerson, number: newNumber}\r\n            \r\n            if (result === true) {\r\n                personsService\r\n                    .update(thisPerson.id, changedPerson)\r\n                    .then(response => {\r\n                        console.log(response)\r\n                        setPersons(persons.map(person => person.id !== thisPerson.id ? person : response))\r\n\r\n                        setSuccessMessage(\r\n                            `Updated '${newName} to ${newNumber}' `\r\n                        )\r\n                        setTimeout(() => {\r\n                            setSuccessMessage(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(\r\n                            `Unable to change number of '${thisPerson.name}'`\r\n                        )\r\n                        setTimeout(() => {\r\n                            setErrorMessage(null)\r\n                        }, 5000)\r\n                    })\r\n\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(newName) === -1) {\r\n            const nameObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n\r\n            personsService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n\r\n                    setSuccessMessage(\r\n                        `Added '${newName} ${newNumber}' `\r\n                    )\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    }, 5000)\r\n                    })\r\n                .catch(error => {\r\n                    setErrorMessage(\r\n                        `Unable to add '${newName}'`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n            } \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({setNewFilter, newFilter}) => {\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                filter name: <input value={newFilter} onChange={handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Success = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success","import React, { useState, useEffect } from 'react';\r\nimport Person from './components/Person'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport personsService from './services/persons'\r\nimport Notification from './components/Notification'\r\nimport Success from './components/Success'\r\n\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ errorMessage, setErrorMessage] = useState(null)\r\n    const [ successMessage, setSuccessMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personsService\r\n        .getAll()\r\n        .then(response => {\r\n            console.log(response)\r\n            setPersons(response)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    if (persons === undefined) {\r\n        return (\r\n            <div>\r\n                No persons in phonebook\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>Phonebook</h1>\r\n                <Notification message={errorMessage} />\r\n                <Success message={successMessage} />\r\n                <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\r\n                <h2>add a new phone number</h2>\r\n                <PersonForm newName={newName} newNumber={newNumber} persons={persons} setPersons={setPersons} setNewName={setNewName} setNewNumber={setNewNumber} setErrorMessage={setErrorMessage} setSuccessMessage={setSuccessMessage} />\r\n                <h2>Numbers</h2>\r\n                <Person persons={persons} setPersons={setPersons} newFilter={newFilter} setErrorMessage={setErrorMessage} setSuccessMessage={setSuccessMessage} />\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, \r\n    document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}